---
title: "Meeting"
format: html
date: today
code-fold: true
lightbox: true
execute:
  message: false
  warning: false
  cache: true
  freeze: auto
---

```{r}
#| label: setup
#| cache: true
library(tidyverse)
theme_set(theme_bw())
library(gt)
library(latex2exp)
here::i_am("experiments/2025-01-23.qmd")

mycols <- c(
  ML = "#E31A1C",
  eRBM = "#A6CEE3",
  iRBM = "#1F78B4",
  Jackknife = "#B2DF8A",
  Bootstrap = "#33A02C",
  `Ozenne et al.` = "#FDBF6F",
  REML = "#FF7F00"
)

source(here::here("experiments/21-prep_results.R"))
```

## Convergence count

```{r}
res_nested |>
  summarise(
    count = sum(converged),
    .by = dist:method
  ) |>
  pivot_wider(names_from = method, values_from = count) |>
  select(-starts_with("info")) |>
  print(n = Inf)
```


```{r}
res_nested |>
  # Here's where the non-convergences are filtered out
  # mutate(converged = case_when(
  #   optim_message == "false convergence (8)" ~ TRUE,
  #   TRUE ~ converged
  # )) |>
  # mutate(converged = all(converged), .by = c(simid, sim)) |>
  # filter(converged) |>
  summarise(
    count = sum(converged),
    .by = dist:method
  ) |>
  ggplot(aes(as.numeric(n), count, fill = method)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_grid(dist ~ model * rel) +
  scale_fill_manual(values = mycols) +
  scale_x_continuous(
    breaks = 1:5,
    labels = c(15, 20, 50, 100, 1000),
    name = "Sample size"
  ) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
```


Change false convergence to convergence.

```{r}
res_nested |>
  # Here's where the non-convergences are filtered out
  mutate(converged = case_when(
    optim_message == "false convergence (8)" ~ TRUE,
    TRUE ~ converged
  )) |>
  # mutate(converged = all(converged), .by = c(simid, sim)) |>
  # filter(converged) |>
  summarise(
    count = sum(converged),
    .by = dist:method
  ) |>
  ggplot(aes(as.numeric(n), count, fill = method)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_grid(dist ~ model * rel) +
  scale_fill_manual(values = mycols) +
  scale_x_continuous(
    breaks = 1:5,
    labels = c(15, 20, 50, 100, 1000),
    name = "Sample size"
  ) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "top")
```
