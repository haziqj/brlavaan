% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/10-sem_rbm_functions.R
\name{fit_sem}
\alias{fit_sem}
\title{Fit a structural equation model using bias-reducing methods}
\usage{
fit_sem(
  model,
  data,
  estimator = "ML",
  estimator.args = list(rbm = "none", plugin_penalty = NULL),
  info_penalty = c("observed", "expected"),
  info_bias = c("observed", "expected"),
  info_se = c("observed", "expected"),
  debug = FALSE,
  lavfun = "sem",
  ...
)
}
\arguments{
\item{model}{A description of the user-specified model. Typically, the model
is described using the lavaan model syntax. See \link{model.syntax} for more
information. Alternatively, a parameter table (eg. the output of the
\code{\link[=lavaanify]{lavaanify()}} function) is also accepted.}

\item{data}{An optional data frame containing the observed variables used in
the model. If some variables are declared as ordered factors, lavaan will
treat them as ordinal variables.}

\item{estimator}{The estimator to use. \strong{Currently only "ML" is supported.}}

\item{estimator.args}{A list containing RBM arguments. Possible arguments are
\itemize{
\item \code{rbm}: The type of RBM method to use. One of \code{"none"}, \code{"explicit"}, or \code{"implicit"}.
\item \code{plugin_penalty}: The type of penalty to use. One of \code{NULL}, \code{"pen_ridge"}, or \code{"pen_ridge_bound"}.
}}

\item{debug}{If TRUE, the function will return a list of intermediate
results for debugging purposes.}

\item{lavfun}{The lavaan function to use. Default is "sem".}

\item{...}{Additional arguments to pass to the \link{lavaan} function.}
}
\value{
An object of class \code{brlavaan} which is a subclass of the
\linkS4class{lavaan} class.
}
\description{
This is the workhorse function to fit a structural equation model using
bias-reducing methods which we use for our simulations. For endusers, we
recommend using the \code{\link[=brsem]{brsem()}}, \code{\link[=brcfa]{brcfa()}}, or \code{\link[=brgrowth]{brgrowth()}} functions which is
a wrapper around this function and outputs something more user-friendly.
}
